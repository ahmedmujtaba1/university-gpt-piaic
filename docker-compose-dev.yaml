services:
  educational-program:
    image: educational-program-img
    restart: always
    build:
      context: ./educational-program
      dockerfile: Dockerfile.dev
    container_name: EducationalProgramCont
    env_file: "./educational-program/.env"
    ports:
      - "8000:8000"
    volumes:
      - ./educational-program:/workspace
      # - .:/workspace:cached
    command:
      - bash
      - -c
      - |
        poetry install
        alembic upgrade head
        python app/init_data.py
        uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    networks:
      - university-gpt-net
    depends_on:
      - postgres_edu_dev_db
    environment:
      - PYTHONPATH=/workspace

  user-management:
    image: user-management-img
    restart: always
    build:
      context: ./user-management
      dockerfile: Dockerfile.dev
    env_file: "./user-management/.env"
    container_name: UserManagementCont
    ports:
      - "8001:8001"
    volumes:
      - ./user-management:/workspace
      # - .:/workspace:cached
    command:
      - bash
      - -c
      - |
        ls
        poetry install
        uvicorn app.main:app --reload --host 0.0.0.0 --port 8001
    networks:
      - university-gpt-net
    depends_on:
      - postgres_auth_dev_db
    environment:
      - PYTHONPATH=/workspace

  quiz-engine:
    image: quiz-engine-img
    restart: always
    build:
      context: ./quiz-engine
      dockerfile: Dockerfile.dev
    env_file: "./quiz-engine/.env"
    container_name: QuizEngineCont
    ports:
      - "8002:8002"
    volumes:
      - ./quiz-engine:/workspace
      # - .:/workspace:cached
    command:
      - bash
      - -c
      - |
        poetry install
        alembic upgrade head
        ls
        python app/init_data.py
        uvicorn app.main:app --reload --host 0.0.0.0 --port 8002
    networks:
      - university-gpt-net
    depends_on:
      - postgres_qse_dev_db
    environment:
      - PYTHONPATH=/workspace

  assessment-evals:
    image: assessment-evals-img
    restart: always
    build:
      context: ./assessment-evals
      dockerfile: Dockerfile.dev
    env_file: "./assessment-evals/.env"
    ports:
      - "8003:8003"
    volumes:
      - ./assessment-evals:/workspace
      # - .:/workspace:cached
    command:
      - bash
      - -c
      - |
        poetry install
        alembic upgrade head
        ls
        python app/init_data.py
        uvicorn app.main:app --reload --host 0.0.0.0 --port 8003
    networks:
      - university-gpt-net
    depends_on:
      - postgres_answer_dev_db
    environment:
      - PYTHONPATH=/workspace


  # A Single Test Database for All Microservices (Raw Migrations using SQLModel)
  postgres_test_db:
    image: postgres:latest # Use the official PostgreSQL image
    restart: always
    container_name: PostgresTestCont
    environment:
      - POSTGRES_USER=mjunaidca
      - POSTGRES_PASSWORD=temp_test_pass
      - POSTGRES_DB=postgres_test_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_db:/var/lib/postgresql/data
    networks:
      - university-gpt-net

  # A Seperate Development Database for Each Microservice (Alembic for Migrations)
  #1. Education Program Microservice Development Database
  postgres_edu_dev_db:
    image: postgres:latest # Use the official PostgreSQL image
    restart: always
    container_name: PostgresEduDevCont
    environment:
      - POSTGRES_USER=mjunaidca
      - POSTGRES_PASSWORD=temp_edu_dev_pass
      - POSTGRES_DB=postgres_edu_dev_db
    ports:
      - "5434:5432"
    volumes:
      - postgres_edu_dev_db:/var/lib/postgresql/data
    networks:
      - university-gpt-net

  #2. Question Bank Microservice Development Database (Question Bank + Topics)
  postgres_qse_dev_db:
    image: postgres:latest # Use the official PostgreSQL image
    restart: always
    container_name: PostgresQSEDevCont
    environment:
      - POSTGRES_USER=mjunaidca
      - POSTGRES_PASSWORD=temp_qse_dev_pass
      - POSTGRES_DB=postgres_qse_dev_db
    ports:
      - "5435:5432"
    volumes:
      - postgres_qse_dev_db:/var/lib/postgresql/data
    networks:
      - university-gpt-net

  #3. Quiz management Microservice Development Database (Quiz + Quiz Engine)
  postgres_answer_dev_db:
    image: postgres:latest # Use the official PostgreSQL image
    restart: always
    container_name: PostgresAnswerDevCont
    environment:
      - POSTGRES_USER=mjunaidca
      - POSTGRES_PASSWORD=temp_answer_dev_pass
      - POSTGRES_DB=postgres_answer_dev_db
    ports:
      - "5436:5432"
    volumes:
      - postgres_answer_dev_db:/var/lib/postgresql/data
    networks:
      - university-gpt-net

  postgres_auth_dev_db:
    image: postgres:latest # Use the official PostgreSQL image
    restart: always
    container_name: PostgresAuthDevCont
    environment:
      - POSTGRES_USER=mjunaidca
      - POSTGRES_PASSWORD=temp_auth_dev_pass
      - POSTGRES_DB=postgres_auth_dev_db
    ports:
      - "5437:5432"
    volumes:
      - postgres_auth_dev_db:/var/lib/postgresql/data
    networks:
      - university-gpt-net


volumes:
  postgres_test_db:
    driver: local
  postgres_edu_dev_db:
    driver: local
  postgres_qse_dev_db:
    driver: local
  postgres_answer_dev_db:
    driver: local
  postgres_auth_dev_db:
    driver: local


networks:
  university-gpt-net: # Define the custom network
